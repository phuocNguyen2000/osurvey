"""ok

Revision ID: e6ad63bc29de
Revises: 
Create Date: 2021-11-01 09:27:45.251683

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e6ad63bc29de'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('base64', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_table('gift_mode',
    sa.Column('gift_mode_id', sa.Integer(), nullable=False),
    sa.Column('mode', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('gift_mode_id')
    )
    op.create_table('notification',
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('status',
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('status_id')
    )
    op.create_table('status_for_event',
    sa.Column('status_for_event_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('status_for_event_id')
    )
    op.create_table('tag',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('tag_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('user_name', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('id_recognition', sa.String(), nullable=True),
    sa.Column('sex', sa.String(length=64), nullable=False),
    sa.Column('nationality', sa.String(length=64), nullable=False),
    sa.Column('home', sa.String(length=64), nullable=False),
    sa.Column('dob', sa.String(length=64), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id_recognition'),
    sa.UniqueConstraint('user_name')
    )
    op.create_index(op.f('ix_user_password'), 'user', ['password'], unique=False)
    op.create_table('address',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('province', sa.String(length=64), nullable=False),
    sa.Column('district', sa.String(length=64), nullable=False),
    sa.Column('ward', sa.String(length=64), nullable=False),
    sa.Column('street', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('device_key',
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('key', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('device_id'),
    sa.UniqueConstraint('key')
    )
    op.create_table('send_notification',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('send_at_time', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.notification_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'notification_id')
    )
    op.create_table('survey',
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=300), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('base64', sa.String(), nullable=False),
    sa.Column('desc', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['status.status_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('survey_id')
    )
    op.create_table('user_tag',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'user_id')
    )
    op.create_table('event',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=True),
    sa.Column('give_away', sa.Integer(), nullable=True),
    sa.Column('limit', sa.Integer(), nullable=True),
    sa.Column('time_stame', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['status_for_event.status_for_event_id'], ),
    sa.ForeignKeyConstraint(['survey_id'], ['survey.survey_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_table('question',
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('survey_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(length=3000), nullable=False),
    sa.Column('allow_diffent_answer', sa.Boolean(), nullable=False),
    sa.Column('type', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['survey_id'], ['survey.survey_id'], ),
    sa.PrimaryKeyConstraint('question_id')
    )
    op.create_table('survey_category',
    sa.Column('survey_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.category_id'], ),
    sa.ForeignKeyConstraint(['survey_id'], ['survey.survey_id'], ),
    sa.PrimaryKeyConstraint('survey_id', 'category_id')
    )
    op.create_table('event_gift_mode',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('gift_mode_id', sa.Integer(), nullable=False),
    sa.Column('tip', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['gift_mode_id'], ['gift_mode.gift_mode_id'], ),
    sa.PrimaryKeyConstraint('event_id', 'gift_mode_id')
    )
    op.create_table('event_tag',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'event_id')
    )
    op.create_table('image',
    sa.Column('image_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('base64', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.question_id'], ),
    sa.PrimaryKeyConstraint('image_id')
    )
    op.create_table('option',
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.String(length=3000), nullable=True),
    sa.Column('type', sa.String(length=3000), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.question_id'], ),
    sa.PrimaryKeyConstraint('option_id')
    )
    op.create_table('payment',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.Column('state', sa.Boolean(), nullable=False),
    sa.Column('paypal_pay_id', sa.String(), nullable=False),
    sa.Column('checkout_token', sa.String(), nullable=False),
    sa.Column('time_stame', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('payment_id'),
    sa.UniqueConstraint('checkout_token'),
    sa.UniqueConstraint('paypal_pay_id')
    )
    op.create_table('user_event',
    sa.Column('user_event_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('do', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.event_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_event_id')
    )
    op.create_table('answer',
    sa.Column('answer_id', sa.Integer(), nullable=False),
    sa.Column('answer', sa.String(), nullable=False),
    sa.Column('base64', sa.String(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('user_event_id', sa.Integer(), nullable=True),
    sa.Column('is_different', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.question_id'], ),
    sa.ForeignKeyConstraint(['user_event_id'], ['user_event.user_event_id'], ),
    sa.PrimaryKeyConstraint('answer_id')
    )
    op.create_table('gift',
    sa.Column('gift_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('user_event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_event_id'], ['user_event.user_event_id'], ),
    sa.PrimaryKeyConstraint('gift_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('gift')
    op.drop_table('answer')
    op.drop_table('user_event')
    op.drop_table('payment')
    op.drop_table('option')
    op.drop_table('image')
    op.drop_table('event_tag')
    op.drop_table('event_gift_mode')
    op.drop_table('survey_category')
    op.drop_table('question')
    op.drop_table('event')
    op.drop_table('user_tag')
    op.drop_table('survey')
    op.drop_table('send_notification')
    op.drop_table('device_key')
    op.drop_table('address')
    op.drop_index(op.f('ix_user_password'), table_name='user')
    op.drop_table('user')
    op.drop_table('tag')
    op.drop_table('status_for_event')
    op.drop_table('status')
    op.drop_table('notification')
    op.drop_table('gift_mode')
    op.drop_table('category')
    # ### end Alembic commands ###
